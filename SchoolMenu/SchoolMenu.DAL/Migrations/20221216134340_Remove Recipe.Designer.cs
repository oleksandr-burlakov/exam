// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolMenu.DAL;

#nullable disable

namespace SchoolMenu.DAL.Migrations
{
    [DbContext(typeof(SchoolMenuContext))]
    [Migration("20221216134340_Remove Recipe")]
    partial class RemoveRecipe
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DayMenuMeal", b =>
                {
                    b.Property<Guid>("DayMenusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MealsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DayMenusId", "MealsId");

                    b.HasIndex("MealsId");

                    b.ToTable("DayMenuMeal");
                });

            modelBuilder.Entity("MealProduct", b =>
                {
                    b.Property<Guid>("MealsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MealsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("MealProduct");
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.DayMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("DayMenus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("891f0651-0ff1-4588-b1a3-a20c22dcfc02"),
                            MenuId = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            WeekDay = 0
                        },
                        new
                        {
                            Id = new Guid("9de297a1-05f5-496c-877f-ee17d361cb00"),
                            MenuId = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            WeekDay = 1
                        },
                        new
                        {
                            Id = new Guid("6ab040f2-36c1-4f2a-ba76-851006c17d2a"),
                            MenuId = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            WeekDay = 2
                        },
                        new
                        {
                            Id = new Guid("bb02d3da-afd5-460b-9196-c562991264f9"),
                            MenuId = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            WeekDay = 3
                        },
                        new
                        {
                            Id = new Guid("33a2f7c0-4845-44b8-bb2b-40728d9bd496"),
                            MenuId = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            WeekDay = 4
                        },
                        new
                        {
                            Id = new Guid("75d2d0e7-f643-4ba6-acab-6d25e9957272"),
                            MenuId = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            WeekDay = 5
                        },
                        new
                        {
                            Id = new Guid("8cc4b18a-4018-4ab7-bc0e-4a58d66e28d9"),
                            MenuId = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            WeekDay = 6
                        });
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.DayMenuMeal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DayMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DayMenuId");

                    b.HasIndex("MealId");

                    b.ToTable("DayMenuMeals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("64d84c5c-9ea7-4261-8907-07bcf3c3e500"),
                            DayMenuId = new Guid("891f0651-0ff1-4588-b1a3-a20c22dcfc02"),
                            MealId = new Guid("e7a51b06-c014-4818-8685-fc6df89ec110")
                        });
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.Meal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7a51b06-c014-4818-8685-fc6df89ec110"),
                            Name = "Summer Asian Slaw",
                            Price = 2.20m,
                            Recipe = "Make the dressing: In a small bowl, whisk together the cashew butter, miso paste, lime juice, sesame oil, and ginger. Whisk in enough water to create a drizzable consistency. Set aside.\r\nIn a dry cast-iron skillet over medium heat, char the peppers whole, rotating until the edges have a little char, about 2 minutes per side. Remove. When cool to the touch, slice in half lengthwise, remove the stem, ribbing, and seeds and slice horizontally into thin strips.\r\nIn a large bowl, combine the cabbage, peppers, scallions, cilantro, basil, chiles, and ¾ of the dressing. Toss until combined. Add the remaining dressing, if desired, and season to taste with a few pinches of sea salt. Serve topped with the toasted nuts, seeds, and sliced peaches."
                        });
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.MealProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MealId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.HasIndex("ProductId");

                    b.ToTable("MealProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42de64f7-a101-44da-8241-a864b3dee9cb"),
                            MealId = new Guid("e7a51b06-c014-4818-8685-fc6df89ec110"),
                            ProductId = new Guid("7562376f-960b-40d8-afb2-42461582c62f")
                        },
                        new
                        {
                            Id = new Guid("1b7010a5-a24a-4f74-9fcb-b4555da7f330"),
                            MealId = new Guid("e7a51b06-c014-4818-8685-fc6df89ec110"),
                            ProductId = new Guid("23a56b97-b0d5-4bb3-87b5-26a07cfb8000")
                        },
                        new
                        {
                            Id = new Guid("a9451b31-efe4-4c25-b11f-3b47c4d0abcd"),
                            MealId = new Guid("e7a51b06-c014-4818-8685-fc6df89ec110"),
                            ProductId = new Guid("3e4e3a17-0fa9-4a19-9797-7499b200b187")
                        });
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DayMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f7583d1-3663-4968-b6b4-b63fb7ff54ff"),
                            DayMenuId = new Guid("00000000-0000-0000-0000-000000000000"),
                            SchoolName = "Lviv school"
                        });
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7562376f-960b-40d8-afb2-42461582c62f"),
                            Name = "Cabbage",
                            ProductPrice = 1.0m
                        },
                        new
                        {
                            Id = new Guid("23a56b97-b0d5-4bb3-87b5-26a07cfb8000"),
                            Name = "Pepper",
                            ProductPrice = 0.4m
                        },
                        new
                        {
                            Id = new Guid("3e4e3a17-0fa9-4a19-9797-7499b200b187"),
                            Name = "Peach",
                            ProductPrice = 1.6m
                        });
                });

            modelBuilder.Entity("DayMenuMeal", b =>
                {
                    b.HasOne("SchoolMenu.DAL.Entities.DayMenu", null)
                        .WithMany()
                        .HasForeignKey("DayMenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolMenu.DAL.Entities.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MealProduct", b =>
                {
                    b.HasOne("SchoolMenu.DAL.Entities.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolMenu.DAL.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.DayMenu", b =>
                {
                    b.HasOne("SchoolMenu.DAL.Entities.Menu", "Menu")
                        .WithMany("Days")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.DayMenuMeal", b =>
                {
                    b.HasOne("SchoolMenu.DAL.Entities.DayMenu", "DayMenu")
                        .WithMany()
                        .HasForeignKey("DayMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolMenu.DAL.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DayMenu");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.MealProduct", b =>
                {
                    b.HasOne("SchoolMenu.DAL.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolMenu.DAL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SchoolMenu.DAL.Entities.Menu", b =>
                {
                    b.Navigation("Days");
                });
#pragma warning restore 612, 618
        }
    }
}
